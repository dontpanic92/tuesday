{
    "componentChunkName": "component---gatsby-theme-apollo-docs-src-components-template-js",
    "path": "/xgx-research-1/0-preface/",
    "result": {"data":{"site":{"pathPrefix":"","siteMetadata":{"title":"Tuesday.","description":"dontpanic 的技术专栏"}},"file":{"sourceInstanceName":"content","childMarkdownRemark":{"frontmatter":{"title":"〇、前言","description":"Preface","featuredImage":null},"headings":[],"fields":{"image":"","apiReference":false},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/dontpanic92/OpenPAL3"},"children":[{"type":"text","value":"妖弓计划"}]},{"type":"text","value":"是一个目标宏大的项目，我希望能够分别复刻《仙剑奇侠传》、《古剑奇谭》和《轩辕剑》系列游戏中的几款。当然，理想和现实还是有相当大距离的（笑）。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"妖弓计划开始于 2019 年 11 月，从《仙剑奇侠传三》开始，当时还叫做 OpenPAL3 仙三开源版。我花了两个月的时间搭了一个简单的游戏引擎的架子，又在元旦和春节假期逆向了仙剑三的模型格式，成功完成了第一个 demo。我很享受这个过程，因为我对图形渲染和信息安全都有浓厚的兴趣，仙三开源版是两者完美的结合，它让我有一种我在“快板界歌唱得最好，在歌唱界快板打得最棒”感觉。2010 年 4 月 1 日仙三开源版发布了 0.1 版本，我写了一篇"},{"type":"element","tagName":"a","properties":{"href":"https://zhuanlan.zhihu.com/p/122532099"},"children":[{"type":"text","value":"知乎文章"}]},{"type":"text","value":"，吸引了一些关注。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"0.1 版本发布后不久，我突然得知可以通过某种方式获得《仙剑奇侠传三》的源代码。实话讲，这让我备受打击——之前所付出的所有努力似乎都变得一文不值，准备翻越的高山突然变得平坦。我本身不是一个凡事都追求意义的人，否则也不会开始做仙三开源版；但这件事确实让我低迷了很久，0.1 版本发布之后停更了一段时间。后来调整了一下心态，还是准备继续逆向下去，毕竟我还是在做没人做的事情，而且也是为将来做仙剑后续系列复刻做准备。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"2022 年左右，"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/0x7c13"},"children":[{"type":"text","value":"@0x7c13"}]},{"type":"text","value":" 跟我过有一些沟通，他想用 Unity 做一版仙剑三。Unity 版的仙剑三进度很快，不久完成度就很高了，这就让仙三开源版继续下去的“意义”更少了一分，也让我显得有些执拗。所以我决定开启后续计划，启动其他游戏的复刻工作。只是觉得愧对《仙剑奇侠传三》主程序 "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/Neil3D"},"children":[{"type":"text","value":"@Neil3D"}]},{"type":"text","value":" 房燕良先生，仙三开源版 0.1 版本发布时也受到了他的关注和鼓励，现在我却要暂时放下仙剑三了。话说当时跟房先生联系的时候，我心里激动的不行，哈哈。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"开始准备做仙剑四复刻的时候，突然想到《轩辕剑》有几款游戏也是用的 RenderWare 引擎，何不一起做了呢？又转念一想，干脆把《古剑奇谭》也加进来吧。目标还是可以定的远大一些，毕竟就算做不完也不会被人扣工资。既然目标变大了，之前起的名字 “OpenPAL” 也就不适用了。而且，保不齐以后还会有其他人也做仙古轩的开源复刻，我叫“仙三开源版”、“仙四开源版”就显得不那么精确，毕竟现在就有人分不清仙三开源版和 Unity 版。所以还是要起个名字。“妖弓计划”就这样诞生了。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不论妖弓计划最终是成功还是失败，我都想让它留下点有用的东西，《山海狂心》就是其一，它囊括了我对各个游戏逆向分析的结论（目前主要是文件格式的分析）。互联网上也有前人的一些经验，例如 RenderWare 引擎就很知名，很多人对它进行了研究。但是由于诸如引擎版本不同等原因，很多时候分析结论无法拿来即用。还有一些软件可以解包游戏资源，但是并没有相关文档或代码描述如何解包。《山海狂心》试图总结我目前已知的内容，为所有对游戏复刻感兴趣的人提供便利。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"dontpanic"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"2023 年 8 月，北京"}]}],"data":{"quirksMode":false}}},"childMdx":null}},"pageContext":{"id":"a25cdb0f-9304-5ac2-9e8d-9a9e6e2a85c1","versionDifference":0,"versionBasePath":"/v2","sidebarContents":[{"title":null,"pages":[]},{"title":"山海狂心：仙古轩系列游戏逆向研究","pages":[{"title":"〇、前言","sidebarTitle":"","description":"Preface","path":"/xgx-research-1/0-preface/"},{"title":"一、打包格式 CPK","sidebarTitle":"","description":"CPK Packaging Format","path":"/xgx-research-1/1-cpk/"}]},{"title":"栈缓冲区溢出 101","pages":[{"anchor":true,"title":"一、栈缓冲区溢出 101","path":"https://ctf.dontpanic.blog/notes/stack-buffer-overflow-101.html"},{"anchor":true,"title":"二、ASLR","path":"https://ctf.dontpanic.blog/notes/stack-buffer-overflow-aslr.html"},{"anchor":true,"title":"三、Security Cookie / Canary","path":"https://ctf.dontpanic.blog/notes/stack-buffer-overflow-canary.html"}]},{"title":"错误模型","pages":[{"title":"〇、错误模型简介","sidebarTitle":"","description":"Introduction","path":"/the-error-model/0-introduction/"},{"title":"一、野心和经验","sidebarTitle":"","description":"Ambitions and Learnings","path":"/the-error-model/1-ambitions-and-learnings/"},{"title":"二、Bug 不是可恢复错误！","sidebarTitle":"","description":"Bugs Aren’t Recoverable Errors!","path":"/the-error-model/2-bugs-arent-recoverable-errors/"},{"title":"三、可靠性、容错性和隔离性","sidebarTitle":"","description":"Reliability, Fault-Tolerance, and Isolation","path":"/the-error-model/3-reliability-fault-tolerance-and-isolation/"},{"title":"四、Bugs：放弃、断言和合约","sidebarTitle":"","description":"Bugs: Abandonment, Assertions, and Contracts","path":"/the-error-model/4-bugs-abandonment-assertions-and-contracts/"},{"title":"五、可恢复错误：类型导向的异常","sidebarTitle":"","description":"Recoverable Errors: Type-Directed Exceptions","path":"/the-error-model/5-ecoverable-errors-type-directed-exceptions/"},{"title":"六、回顾和总结","sidebarTitle":"","description":"Retrospective and Conclusions","path":"/the-error-model/6-retrospective-and-conclusions/"}]},{"title":"公共语言运行时","pages":[{"title":"一、CLR 简介","sidebarTitle":"","description":null,"path":"/botr/1-introduction/"},{"title":"二、CLR 垃圾回收器的设计","sidebarTitle":"","description":null,"path":"/botr/2-garbage-collection/"},{"title":"六、CLR 类型加载器的设计","sidebarTitle":"","description":null,"path":"/botr/6-type-loader/"}]}],"versions":[],"defaultVersion":"2"}},
    "staticQueryHashes": ["1511030359","2468095761","4121983877"]}